plugins {
    id "java"
    id "application"
    id "edu.sc.seis.launch4j" version "3.0.6"
    id "com.gradleup.shadow" version "8.3.5"
}

group = ss_group
version = "5.0.0"

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":build-shared")  // This makes shared classes available

    implementation "info.picocli:picocli:4.7.5"
    annotationProcessor "info.picocli:picocli-codegen:4.7.5"
    implementation fileTree(dir: "libs", include: "*.jar")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(java_language_version)
    }
}

jar {
    enabled = false
}

application {
    mainClass = ss_main_class
}

shadowJar {
    archiveBaseName = "server-sync"
    archiveClassifier = "server"

    processResources {
        exclude "css/application.css"
    }

    manifest {
        attributes "Main-Class": ss_main_class
        attributes "Implementation-Version": project.version
    }

    minimize()

    dependencies {
        exclude "forge*.jar"
        exclude "**/*javafx*/**"
    }
}

launch4j {
    jarTask = shadowJar
    mainClassName = ss_main_class
    outfile = "ServerSyncServer.exe"
    headerType = "console"
    icon = "${rootDir}/build-shared/src/main/resources/ServersyncLogoServer.ico"
    copyConfigurable = []
    supportUrl = "https://github.com/superzanti/ServerSync"
    productName = "ServerSync - Server"
    fileDescription = "The server side for admins."
    version = project.version
}

startScripts {
    dependsOn shadowJar
    classpath = files(classpath = files("${layout.buildDirectory.get()}/libs/${project.name}-${project.version}.jar"))
}

distZip {
    dependsOn shadowJar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

distTar {
    dependsOn shadowJar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

distributions {
    main {
        contents {
            from(shadowJar)
        }
    }
}

tasks.register("assembleGithubArtifacts", Copy) {
    group = "distribution"
    dependsOn createExe
    from layout.buildDirectory.dir("libs"), layout.buildDirectory.file("launch4j")
    into file("$rootDir/publish/github")
    exclude "lib"
}

clean {
    delete "$rootDir/publish"
}