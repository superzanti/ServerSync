buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'


version = "3.0.0"
group= "com.superzanti.serversync" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "serversync"

minecraft {
    version = "1.9.4-12.17.0.1951"
    runDir = "runtime/client"
    mappings = "snapshot_20160604"
}

configurations {
	includedLibs
}

jar {
	manifest {
        attributes 'Main-Class': 'runme.Main'
    }
}

shadowJar {
	dependencies {
   	 include(dependency('com.google.code.gson:gson:2.6.2'))
  	}
  	classifier = ''
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
    runtime 'com.google.code.gson:gson:2.6.2'
    includedLibs 'com.google.code.gson:gson:2.6.2'
    shadow 'com.google.code.gson:gson:2.6.2'

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
